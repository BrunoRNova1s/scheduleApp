{"version":3,"sources":["util.js","context/GlobalContext.jsx","components/CalendarHeader.jsx","components/EventCard.jsx","components/Sidebar.jsx","components/Day.jsx","components/Month.jsx","App.js","reportWebVitals.js","services/api.jsx","context/ContextWrapper.jsx","index.js"],"names":["getMonth","month","dayjs","Math","floor","year","firstDayOfTheMonth","Date","day","currentMonthCount","daysMatrix","Array","fill","map","GlobalContext","React","createContext","monthIndex","setMonthIndex","index","dispatchCalEvent","type","payload","savedEventsLogs","setSelectedEvent","CalendarHeader","useContext","className","onClick","format","EventCard","title","description","id","state","useState","stateCta","setStateCta","useEffect","e","preventDefault","calendarEvent","Sidebar","schedulesCard","schedule","some","saved","Day","rowIdx","dayEvents","setDayEvents","selectedEvent","events","filter","evt","toUpperCase","idx","Month","row","i","Fragment","App","currenMonth","setCurrentMonth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","api","axios","create","baseURL","savedEventsLogsReducer","post","delete","Error","ContextWrapper","props","setSchedulesCard","useReducer","get","response","data","catch","err","console","log","Provider","value","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f725cf1.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\n\nexport function getMonth(month = dayjs().month()) {\n  month = Math.floor(month);\n  const year = dayjs().year();\n  const firstDayOfTheMonth = dayjs(new Date(year, month, 1)).day();\n  let currentMonthCount = 0 - firstDayOfTheMonth;\n  const daysMatrix = new Array(5).fill([]).map(() => {\n    return new Array(7).fill(null).map(() => {\n      currentMonthCount++;\n      return dayjs(new Date(year, month, currentMonthCount));\n    });\n  });\n  return daysMatrix;\n}\n","import React from \"react\";\n\nconst GlobalContext = React.createContext({\n  monthIndex: 0,\n  setMonthIndex: (index) => {},\n  dispatchCalEvent: ({ type, payload }) => {},\n  savedEventsLogs: [],\n  setSelectedEvent: () => {},\n});\n\nexport default GlobalContext;\n","import dayjs from \"dayjs\";\nimport React, { useContext } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\nexport default function CalendarHeader() {\n  const { monthIndex, setMonthIndex } = useContext(GlobalContext);\n  function handlePrevMonth() {\n    setMonthIndex(monthIndex - 1);\n  }\n\n  function handleNextMonth() {\n    setMonthIndex(monthIndex + 1);\n  }\n\n  function handleReset() {\n    setMonthIndex(dayjs().month());\n  }\n\n  return (\n    <header className=\"px-4 py-2 flex justify-between\">\n      <h1 className=\"mr-10 text-xl text-gray-500 font-bold\">Schedules</h1>\n      <div className=\"flex\">\n        <button onClick={handleReset} className=\"border rounded py-2 px-4 mr-5\">\n          Today\n        </button>\n        <button onClick={handlePrevMonth}>\n          <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n            chevron_left\n          </span>\n        </button>\n        <button onClick={handleNextMonth}>\n          <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n            chevron_right\n          </span>\n        </button>\n        {\n          <h2 className=\"ml-4 text-xl text-gray-500 font-bold\">\n            {dayjs(new Date(dayjs().year(), monthIndex)).format(\"MMMM YYYY\")}\n          </h2>\n        }\n      </div>\n    </header>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\n\nexport default function EventCard({ title, description, day, id, state }) {\n  const { dispatchCalEvent, setSelectedEvent } = useContext(GlobalContext);\n  const [stateCta, setStateCta] = useState(\"\");\n\n  useEffect(() => {\n    setStateCta(state);\n  }, [state]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const calendarEvent = {\n      title,\n      description,\n      day,\n      id,\n    };\n\n    if (stateCta === \"retire\") {\n      dispatchCalEvent({\n        type: \"delete\",\n        payload: id,\n      });\n      setStateCta(\"unretired\");\n    } else {\n      dispatchCalEvent({ \n        type: \"push\", \n        payload: [calendarEvent] });\n      setStateCta(\"retired\");\n    }\n  }\n\n  function handleCardClick() {\n    setSelectedEvent(id);\n  }\n\n  return (\n    <div\n      className=\"flex\"\n      {...(stateCta === \"retire\" && {\n        onClick: handleCardClick,\n        className: \"cursor-pointer\",\n      })}\n    >\n      <form className=\"bg-white rounded-lg shadow-md w-full\">\n        <header className=\"bg-gray-100 px-4 py-2 flex justify-center items-center\">\n          <span className=\"\">{title}</span>\n        </header>\n        <div className=\"p-3\">\n          <div className=\"grid grid-cols-1/5 items-end gap-y-7\">\n            <div></div>\n            <div className=\"flex\">\n              <span className=\"material-icons-outlined text-gray-400\">\n                bookmark_border\n              </span>\n              <p>{description}</p>\n            </div>\n          </div>\n        </div>\n        <footer className=\"flex justify-end border-t p-3 mt-5\">\n          <button\n            type=\"button\"\n            onClick={handleSubmit}\n            className=\"bg-blue-500 hover:bg-blue-600 px-6 py-2 rounded text-white\"\n            data-testid=\"cta\"\n          >\n            {stateCta}\n          </button>\n        </footer>\n      </form>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport EventCard from \"./EventCard\";\n\nexport default function Sidebar() {\n  const { schedulesCard } = useContext(GlobalContext);\n  const { savedEventsLogs } = useContext(GlobalContext);\n\n  return (\n    <aside className=\"border p-5 w-64\">\n      <div className=\"flex flex-col gap-y-8 h-full overflow-y-scroll\">\n        {schedulesCard &&\n          schedulesCard.map((schedule) => (\n            <EventCard\n              title={schedule.title}\n              day={schedule.day}\n              description={schedule.description}\n              state={\n                savedEventsLogs.some((saved) => saved.id === schedule.id)\n                  ? \"retire\"\n                  : \"unretire\"\n              }\n              key={schedule.id}\n              id={schedule.id}\n            />\n          ))}\n      </div>\n    </aside>\n  );\n}\n","import dayjs from \"dayjs\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\n\nexport default function Day({ day, rowIdx }) {\n  const [dayEvents, setDayEvents] = useState([]);\n  const { savedEventsLogs, selectedEvent } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const events = savedEventsLogs.filter(\n      (evt) =>\n        dayjs(evt.day).format(\"DD-MM-YY\") === day.format(\"DD-MM-YY\") &&\n        evt.id === selectedEvent\n    );\n    setDayEvents(events);\n  }, [savedEventsLogs, day, selectedEvent]);\n\n  function getCurrentDayClass() {\n    return day.format(\"DD-MM-YY\") === dayjs().format(\"DD-MM-YY\")\n      ? \"bg-blue-600 text-white rounded-full w-7\"\n      : \"\";\n  }\n  return (\n    <div className=\"border border-gray-200 flex flex-col\">\n      <header className=\"flex flex-col items-center\">\n        {rowIdx === 0 && (\n          <p className=\"text-sm mt-1\">{day.format(\"ddd\").toUpperCase()}</p>\n        )}\n        <p className={`text-sm p-1 my-1 text-center  ${getCurrentDayClass()}`}>\n          {day.format(\"DD\")}\n        </p>\n      </header>\n      <div className=\"flex-1\">\n        {dayEvents.map((evt, idx) => (\n          <div\n            key={idx}\n            className={`bg-red-200 p-1 mr-3 text-gray-600 text-sm rounded mb-1 truncate`}\n          >\n            {evt.title}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Day from \"./Day\";\nexport default function Month({ month }) {\n  return (\n    <div className=\"flex-1 grid grid-cols-7 grid-rows-5\">\n      {month.map((row, i) => (\n        <React.Fragment key={i}>\n          {row.map((day, idx) => (\n            <Day day={day} key={idx} rowIdx={i} />\n          ))}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getMonth } from \"./util\";\nimport CalendarHeader from \"./components/CalendarHeader\";\nimport Sidebar from \"./components/Sidebar\";\nimport Month from \"./components/Month\";\nimport GlobalContext from \"./context/GlobalContext\";\n\nfunction App() {\n  const [currenMonth, setCurrentMonth] = useState(getMonth());\n  const { monthIndex } = useContext(GlobalContext);\n\n  useEffect(() => {\n    setCurrentMonth(getMonth(monthIndex));\n  }, [monthIndex]);\n\n  return (\n    <>\n      <div className=\"h-screen flex flex-col\">\n        <CalendarHeader />\n        <div className=\"flex flex-1\">\n          <Sidebar />\n          <Month month={currenMonth} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://my-json-server.typicode.com/BrunoRNova1s/scheduleApp/'\n});\n\nexport default api","import React, { useState, useEffect, useReducer, useMemo } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport api from \"../services/api\";\nimport dayjs from \"dayjs\";\n\nfunction savedEventsLogsReducer(state, { type, payload }) {\n  switch (type) {\n    case \"get\":\n      return [...payload];\n    case \"push\":\n      api.post(\"scheduleLogs\", ...payload);\n      return [...state, ...payload];\n    case \"delete\":\n      api.delete(`scheduleLogs/${payload}`);\n      return state.filter((evt) => evt.id !== payload);\n    default:\n      throw new Error();\n  }\n}\n\nexport default function ContextWrapper(props) {\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\n  const [schedulesCard, setSchedulesCard] = useState([]);\n  const [savedEventsLogs, dispatchCalEvent] = useReducer(\n    savedEventsLogsReducer,\n    []\n  );\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  useEffect(() => {\n    api\n      .get(\"/schedules\")\n      .then((response) => {\n        setSchedulesCard(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    api\n      .get(\"/scheduleLogs\")\n      .then((response) => {\n        dispatchCalEvent({ type: \"get\", payload: response.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        monthIndex,\n        setMonthIndex,\n        dispatchCalEvent,\n        selectedEvent,\n        setSelectedEvent,\n        savedEventsLogs,\n        schedulesCard,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nReactDOM.render(\n  <React.StrictMode>\n    <ContextWrapper>\n      <App />\n    </ContextWrapper>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}